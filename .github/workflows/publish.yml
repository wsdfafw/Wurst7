name: Publish Release
run-name: "Publish release from ${{ github.ref_name }} branch"

permissions:
  # Needed to push the tag.
  contents: write

on:
  workflow_dispatch:
    inputs:
      close_milestone:
        description: "Close milestone"
        required: true
        type: boolean
        default: true
      upload_backups:
        description: "Upload to backups server"
        required: true
        type: boolean
        default: true
      publish_github:
        description: "Publish to GitHub"
        required: true
        type: boolean
        default: true
      update_website:
        description: "Update WurstClient.net post (only works if there already is one)"
        required: true
        type: boolean
        default: false

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      WI_BACKUPS_API_KEY: ${{ secrets.WI_BACKUPS_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Include all tags in case the new tag already exists.
          fetch-tags: true

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "microsoft"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: ./gradlew build --stacktrace --warning-mode=fail

      - name: Create and push tag
        run: |
          MOD_VERSION=$(grep "mod_version" gradle.properties | cut -d'=' -f2 | tr -d ' \r')
          git config --global user.name "Wurst-Bot"
          git config --global user.email "contact.wurstimperium@gmail.com"
          git tag "$MOD_VERSION"
          git push origin "$MOD_VERSION"

      - name: Close milestone
        if: ${{ inputs.close_milestone }}
        run: ./gradlew closeMilestone --stacktrace

      - name: Upload backups
        if: ${{ inputs.upload_backups }}
        run: ./gradlew uploadBackups --stacktrace

      - name: Publish to GitHub
        if: ${{ inputs.publish_github }}
        env:
          GITHUB_TOKEN: ${{ secrets.OLD_MCX_PUBLISH_TOKEN }}
        run: ./gradlew github --stacktrace

      - name: Trigger website update
        if: ${{ inputs.update_website }}
        env:
          GH_TOKEN: ${{ secrets.WURSTCLIENT_NET_PUBLISH_TOKEN }}
        run: |
          MOD_VERSION=$(grep "mod_version" gradle.properties | cut -d'=' -f2 | tr -d ' \r')
          WURST_VERSION=$(echo "$MOD_VERSION" | sed 's/^v//' | sed 's/-MC.*$//')
          MC_VERSION=$(grep "minecraft_version" gradle.properties | cut -d'=' -f2 | tr -d ' \r')
          FAPI_VERSION=$(grep "fabric_version" gradle.properties | cut -d'=' -f2 | tr -d ' \r')
          gh workflow run add_wurst_port.yml \
            -R Wurst-Imperium/WurstClient.net \
            -f wurst_version="$WURST_VERSION" \
            -f mc_version="$MC_VERSION" \
            -f fapi_version="$FAPI_VERSION"
